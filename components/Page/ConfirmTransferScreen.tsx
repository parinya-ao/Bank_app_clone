/**
 * ==============================
 * CONFIRM TRANSFER SCREEN COMPONENT
 * ==============================
 * Screen for confirming transfer details and PIN entry
 */

import { Ionicons } from '@expo/vector-icons';
import { useState } from 'react';
import { SafeAreaView, ScrollView, Text, TouchableOpacity, View } from 'react-native';

// Import types and constants
import { NavigationProps } from '../../types';

export function ConfirmTransferScreen({
  onNavigate,
  showSuccessToast,
  showErrorToast
}: NavigationProps) {
  const [isProcessing, setIsProcessing] = useState(false);

  const handleConfirmTransfer = () => {
    setIsProcessing(true);

    // Simulate transfer processing
    setTimeout(() => {
      // Simulate random success/failure (80% success rate)
      const isSuccess = Math.random() > 0.2;

      if (isSuccess) {
        showSuccessToast?.(
          '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
          '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 1,000.00 ‡∏ö‡∏≤‡∏ó ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
        );
        setTimeout(() => onNavigate('home'), 1500);
      } else {
        showErrorToast?.(
          '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
        );
      }
      setIsProcessing(false);
    }, 2000);
  };
  return (
    <SafeAreaView className="flex-1 bg-slate-700">
      <View className="flex-row items-center justify-between px-4 py-3">
        <TouchableOpacity onPress={() => onNavigate('enterAmount')}>
          <Ionicons name="arrow-back" size={24} color="white" />
        </TouchableOpacity>
        <Text className="text-white text-lg font-semibold">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô</Text>
        <View className="w-6" />
      </View>

      <ScrollView className="flex-1 px-4">
        {/* Transfer Summary */}
        <View className="bg-gray-800 rounded-xl p-4 mb-6">
          <Text className="text-white font-semibold mb-4">‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</Text>

          <View className="space-y-3">
            <View className="flex-row justify-between">
              <Text className="text-gray-400">‡∏à‡∏≤‡∏Å</Text>
              <Text className="text-white">xxx-x-x8888-x</Text>
            </View>
            <View className="flex-row justify-between">
              <Text className="text-gray-400">‡πÑ‡∏õ‡∏¢‡∏±‡∏á</Text>
              <Text className="text-white">‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ</Text>
            </View>
            <View className="flex-row justify-between">
              <Text className="text-gray-400">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á</Text>
              <Text className="text-white">xxx-x-xx123-x</Text>
            </View>
            <View className="flex-row justify-between">
              <Text className="text-gray-400">‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</Text>
              <Text className="text-white">‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢</Text>
            </View>
            <View className="border-t border-gray-600 pt-3">
              <View className="flex-row justify-between">
                <Text className="text-gray-400">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</Text>
                <Text className="text-white text-lg font-semibold">1,000.00 ‡∏ö‡∏≤‡∏ó</Text>
              </View>
            </View>
          </View>
        </View>

        {/* PIN Entry */}
        <View className="bg-gray-800 rounded-xl p-4 mb-6">
          <Text className="text-white font-semibold mb-4">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ PIN</Text>
          <View className="flex-row justify-center space-x-4">
            <View className="w-4 h-4 bg-green-500 rounded-full" />
            <View className="w-4 h-4 bg-green-500 rounded-full" />
            <View className="w-4 h-4 bg-green-500 rounded-full" />
            <View className="w-4 h-4 bg-green-500 rounded-full" />
            <View className="w-4 h-4 bg-gray-600 rounded-full" />
            <View className="w-4 h-4 bg-gray-600 rounded-full" />
          </View>
        </View>

        {/* Confirm Button */}
        <TouchableOpacity
          className={`rounded-xl py-4 mb-4 ${ isProcessing
            ? 'bg-gray-500'
            : 'bg-green-500 active:bg-green-600'
            }`}
          onPress={handleConfirmTransfer}
          disabled={isProcessing}
        >
          <View className="flex-row items-center justify-center">
            {isProcessing && (
              <View className="mr-2">
                <Text className="text-white">üîÑ</Text>
              </View>
            )}
            <Text className="text-white text-center font-semibold text-lg">
              {isProcessing ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...' : '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô'}
            </Text>
          </View>
        </TouchableOpacity>

        <TouchableOpacity
          className="bg-gray-600 rounded-xl py-4"
          onPress={() => onNavigate('home')}
        >
          <Text className="text-white text-center font-semibold text-lg">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Text>
        </TouchableOpacity>
      </ScrollView>
    </SafeAreaView>
  );
}
