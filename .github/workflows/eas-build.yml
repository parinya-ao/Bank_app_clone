name: EAS Build Android Production

on:
  push:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch: # Allow manual trigger

env:
  BUN_VERSION: latest
  EAS_BUILD_PROFILE: production

jobs:
  build:
    name: Build Android Production APK
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: 🏗 Setup repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install

      - name: 🧹 Lint and format code
        continue-on-error: true  # Don't fail build on lint warnings
        run: |
          # Format code with Prettier
          echo "📝 Formatting code with Prettier..."
          bunx prettier --write . || echo "⚠️ Prettier formatting completed with warnings"

          # Run linting if script exists
          echo "🔍 Checking for lint script..."
          if grep -q '"lint"' package.json; then
            echo "Running lint script..."
            bun run lint || echo "⚠️ Lint completed with warnings (non-blocking)"
          else
            echo "ℹ️ No lint script found, skipping..."
          fi

          # Run type checking if script exists
          echo "🔍 Checking for type-check script..."
          if grep -q '"type-check"' package.json; then
            echo "Running type-check script..."
            bun run type-check || echo "⚠️ Type check completed with warnings (non-blocking)"
          else
            echo "ℹ️ No type-check script found, skipping..."
          fi

          echo "✅ Code quality checks completed"

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: � EAS Build Info
        run: |
          eas build:version:get --platform android
          eas build:list --platform android --limit 5 --non-interactive

      - name: 🚀 Build Android APK
        run: |
          eas build \
            --platform android \
            --profile ${{ env.EAS_BUILD_PROFILE }} \
            --non-interactive \
            --clear-cache \
            --wait

      - name: � Get build URL
        id: build-url
        run: |
          BUILD_URL=$(eas build:list --platform android --limit 1 --json --non-interactive | jq -r '.[0].artifacts.buildUrl // empty')
          echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT
          echo "Build URL: $BUILD_URL"

      - name: 📄 Create build summary
        run: |
          echo "## 🚀 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: Android" >> $GITHUB_STEP_SUMMARY
          echo "- **Profile**: ${{ env.EAS_BUILD_PROFILE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.build-url.outputs.build_url }}" ]; then
            echo "- **Download**: [${{ steps.build-url.outputs.build_url }}](${{ steps.build-url.outputs.build_url }})" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🎉 Build completed
        run: |
          echo "✅ Android build completed successfully!"
          echo "🔗 Check the build summary above for download link"
